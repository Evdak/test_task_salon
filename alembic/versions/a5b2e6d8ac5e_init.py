"""init

Revision ID: a5b2e6d8ac5e
Revises: 
Create Date: 2022-05-15 12:07:11.146289

"""
from alembic import op
import fastapi_users_db_sqlalchemy
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a5b2e6d8ac5e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
                    sa.Column('email', sa.String(length=320), nullable=False),
                    sa.Column('hashed_password', sa.String(
                        length=1024), nullable=False),
                    sa.Column('is_active', sa.Boolean(), nullable=False),
                    sa.Column('is_superuser', sa.Boolean(), nullable=False),
                    sa.Column('is_verified', sa.Boolean(), nullable=False),
                    sa.Column('id', fastapi_users_db_sqlalchemy.generics.GUID(),
                              nullable=False),
                    sa.Column('role', sa.String(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), [
                              'email'], unique=True)

    op.create_table('masters',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column(
                        'master_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
                    sa.Column('rating', sa.Float(), server_default=sa.text(
                        '(0.0)'), nullable=True),
                    sa.Column('rate_count', sa.Integer(),
                              server_default=sa.text('0'), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['master_id'], ['user.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('id')
                    )
    with op.batch_alter_table('masters', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_masters_master_id'), [
                              'master_id'], unique=True)

    op.create_table('e_queue',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column(
                        'user_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
                    sa.Column(
                        'master_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
                    sa.Column('is_started', sa.Boolean(), nullable=False),
                    sa.Column('starts_at', sa.DateTime(), nullable=True),
                    sa.Column('started_at', sa.DateTime(), nullable=True),
                    sa.Column('ended_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['master_id'], ['masters.master_id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['user.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    with op.batch_alter_table('e_queue', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_e_queue_id'), ['id'], unique=True)

    op.create_table('feedback',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column(
                        'user_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
                    sa.Column(
                        'master_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
                    sa.Column('rate', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['master_id'], ['masters.master_id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['user.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    with op.batch_alter_table('feedback', schema=None) as batch_op:
        batch_op.create_index(batch_op.f(
            'ix_feedback_id'), ['id'], unique=True)

    op.create_table('live_queue',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column(
                        'user_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
                    sa.Column(
                        'master_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('deleted_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['master_id'], ['masters.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['user.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    with op.batch_alter_table('live_queue', schema=None) as batch_op:
        batch_op.create_index(batch_op.f(
            'ix_live_queue_id'), ['id'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('live_queue', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_live_queue_id'))

    op.drop_table('live_queue')
    with op.batch_alter_table('feedback', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_feedback_id'))

    op.drop_table('feedback')
    with op.batch_alter_table('e_queue', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_e_queue_id'))

    op.drop_table('e_queue')
    with op.batch_alter_table('masters', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_masters_master_id'))

    op.drop_table('masters')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    # ### end Alembic commands ###
